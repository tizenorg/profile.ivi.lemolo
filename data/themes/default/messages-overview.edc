group {
   name: "elm/layout/ofono-efl/messages-overview";

   /*
    * Represents the messages compose layout with actions and swallows.
    *
    * Parts:
    *
    * SWALLOW: elm.swallow.genlist - Where all the conversations will appear
    *
    * Signals:
    *   Emit (source is "gui"):
    *   clicked,edit - When the edit button is cliked
    *   clicked,edit,done - When The Button "Done" while editing is clicked
    *
    *   Listens (source is "gui"):
    *   show,genlist  - Show the genlist with the current message thread
    *   hidden,genlist - Hide the genlist
    *   toggle,on,edit - User is editing
    *   toggle,off,edit - User finished the editing
    *
    * Where <ID> is the name of the button
    *
    */

   images {
      image: "bg_keypad.jpg" COMP;
   }

   parts {
      part {
         name: "bg";
         type: IMAGE;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            color: 255 255 255 255;
            color_class: "primary";
            image {
               normal: "bg_keypad.jpg";
               scale_hint: STATIC;
            }
            fill.smooth: 1;

         }
      }

      part {
         name: "notification.bar";
         type: RECT;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            color: 255 255 255 255;
            rel1.relative: 0.0 0.0;
            rel2 {
               relative: 1.0 0.0;
               offset: -1 NOTIFICATION_BAR_HEIGHT;
            }
         }
      }

      part {
         name: "button.area.clipper";
         type: RECT;
         description {
            state: "default" 0.0;
            rel1.to: "bg.buttons";
            rel2 {
               to: "bg.buttons";
               offset: -1 SEPARATOR_HEIGHT;
            }
         }
      }


      part {
         name: "button.clipper";
         type: RECT;
         clip_to: "button.area.clipper";
         description {
            state: "default" 0.0;
            rel1.to: "button.area.clipper";
            rel2.to: "button.area.clipper";
         }
         description {
            state: "alternate" 0.0;
            color: 255 255 255 0;
            visible: 0;
         }
      }

      part {
         name: "edit-button.clipper";
         type: RECT;
         clip_to: "button.area.clipper";
         description {
            state: "default" 0.0;
            color: 255 255 255 0;
            visible: 0;
            rel1.to: "button.area.clipper";
            rel2.to: "button.area.clipper";
         }
         description {
            state: "alternate" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }

      part {
         name: "edit.clipper";
         type: RECT;
         description {
            state: "default" 0.0;
            rel1.to: "bg.edit";
            rel2 {
               to: "bg.edit";
               offset: -1 SEPARATOR_HEIGHT;
            }
         }
      }

      part {
         name: "bg.buttons";
         type: RECT;
         mouse_events: 0;
         clip_to: "button.clipper";
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
            fixed: 1 1;
            min: 0 (ACTION_HEIGHT / 2);
            rel1 {
               to: "notification.bar";
               relative: 0.0 1.0;
            }
            rel2 {
               to_x: "bg.edit";
               to_y: "notification.bar";
               relative: 0.0 1.0;
               offset: (-ITEM_PADDING - 1) (ACTION_HEIGHT / 2 - 1);
            }
         }
      }

      part {
         name: "bg.edit";
         type: RECT;
         mouse_events: 0;
         clip_to: "edit.clipper";
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
            min: 0 (ACTION_HEIGHT / 2);
            rel1 {
               to: "notification.bar";
               relative: 1.0 1.0;
               offset: (-LIST_ICON_SIZE - ITEM_PADDING - BORDER_PADDING) 0;
            }
            rel2 {
               to: "notification.bar";
               relative: 1.0 1.0;
               offset: -1 (ACTION_HEIGHT / 2 - 1);
            }
         }
      }

#define SEPARATOR(id, clip, rely, offy, relto)                          \
      part {                                                            \
         name: "separator.primary."##id;                                \
         type: RECT;                                                    \
         mouse_events: 0;                                               \
         clip_to: clip;                                                 \
         description {                                                  \
            state: "default" 0.0;                                       \
            color: 255 255 255 255;                                     \
            color_class: "primary";                                     \
            rel1 {                                                      \
               relative: 0.0 rely;                                      \
               offset: 0 offy;                                          \
               to_y: relto;                                             \
            }                                                           \
            rel2 {                                                      \
               relative: 1.0 rely;                                      \
               offset: -1 (offy + SEPARATOR_HEIGHT / 2);                \
               to_y: relto;                                             \
            }                                                           \
         }                                                              \
      }                                                                 \
      part {                                                            \
         name: "separator.bg."##id;                                     \
         type: RECT;                                                    \
         mouse_events: 0;                                               \
         clip_to: clip;                                                 \
         description {                                                  \
            state: "default" 0.0;                                       \
            color: 255 255 255 255;                                     \
            color_class: "bg";                                          \
            rel1 {                                                      \
               relative: 0.0 rely;                                      \
               offset: 0 (offy + SEPARATOR_HEIGHT / 2);                 \
               to_y: relto;                                             \
            }                                                           \
            rel2 {                                                      \
               relative: 1.0 rely;                                      \
               offset: -1 (offy + SEPARATOR_HEIGHT);                    \
               to_y: relto;                                             \
            }                                                           \
         }                                                              \
      }

      SEPARATOR("button", "button.area.clipper", 1.0, 0, "bg.buttons");
      SEPARATOR("edit-button", "button.area.clipper", 1.0, 0, "bg.buttons");
      SEPARATOR("edit", "edit.clipper", 1.0, 0, "bg.edit");
#undef SEPARATOR


#define BUTTON(id, label, ccls, clip, r1, r2)                           \
      part {                                                            \
         name: "button."##id;                                           \
         type: RECT;                                                    \
         mouse_events: 1;                                               \
         clip_to: clip;                                                 \
         description {                                                  \
            state: "default" 0.0;                                       \
            color: 255 255 255 0;                                       \
            color_class: "action";                                      \
            rel1 {                                                      \
               to: "bg.buttons";                                        \
               relative: r1;                                            \
            }                                                           \
            rel2 {                                                      \
               to: "bg.buttons";                                        \
               relative: r2;                                            \
            }                                                           \
         }                                                              \
         description {                                                  \
            state: "pressed" 0.0;                                       \
            inherit: "default" 0.0;                                     \
            color: 255 255 255 255;                                     \
         }                                                              \
      }                                                                 \
      part {                                                            \
         name: "label."##id;                                            \
         type: TEXT;                                                    \
         mouse_events: 0;                                               \
         clip_to: clip;                                                 \
         description {                                                  \
            state: "default" 0.0;                                       \
            color: 255 255 255 255;                                     \
            color_class: ccls;                                          \
            rel1.to: "button."##id;                                     \
            rel2 {                                                      \
               to: "button."##id;                                       \
            }                                                           \
            text {                                                      \
               text: label;                                             \
               font: FONT_NORMAL;                                       \
               size: SIZE_MEDIUM;                                       \
               align: 0.5 0.5;                                          \
            }                                                           \
         }                                                              \
         description {                                                  \
            state: "pressed" 0.0;                                       \
            inherit: "default" 0.0;                                     \
            color: 240 240 240 255;                                        \
         }                                                              \
      }                                                                 \
                                                                        \
      programs {                                                        \
         program {                                                      \
            signal: "toggle,on,"##id;                                   \
            source: "gui";                                              \
            action: STATE_SET "pressed" 0.0;                            \
            target: "button."##id;                                      \
            target: "label."##id;                                       \
         }                                                              \
         program {                                                      \
            signal: "toggle,off,"##id;                                  \
            source: "gui";                                              \
            action: STATE_SET "default" 0.0;                            \
            target: "button."##id;                                      \
            target: "label."##id;                                       \
         }                                                              \
         program {                                                      \
            signal: "mouse,clicked,1";                                  \
            source: "button."##id;                                      \
            action: SIGNAL_EMIT "clicked,"##id "gui";                   \
            api: id"_clicked" id" was clicked";                         \
         }                                                              \
      }

      BUTTON("view",    "View",    "action", "button.clipper", 0.0 0.0, 0.5 1.0);
      BUTTON("compose", "Compose", "action", "button.clipper", 0.5 0.0, 1.0 1.0);

      BUTTON("clear",     "Clear", "caution", "edit-button.clipper", 0.0 0.0, 0.5 1.0);
      BUTTON("edit,done", "Done",  "action", "edit-button.clipper", 0.5 0.0, 1.0 1.0);
#undef BUTTON

      part {
         name: "button.edit";
         type: RECT;
         mouse_events: 1;
         clip_to: "edit.clipper";
         description {
            state: "default" 0.0;
            color: 255 255 255 0;
            color_class: "caution";
            rel1.to: "bg.edit";
            rel2.to: "bg.edit";
         }
         description {
            state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part {
         name: "ico.edit";
         type: IMAGE;
         mouse_events: 0;
         clip_to: "edit.clipper";
         description {
            state: "default" 0.0;
            min: LIST_ICON_SIZE LIST_ICON_SIZE;
            max: LIST_ICON_SIZE LIST_ICON_SIZE;
            align: 0.0 0.5;
            color: 255 255 255 255;
            color_class: "caution";
            rel1 {
               to: "button.edit";
               offset: ITEM_PADDING 0;
            }
            rel2 {
               to: "button.edit";
               offset: (-BORDER_PADDING - 1) -1;
            }
            image {
               normal: "ico_del.png";
               scale_hint: STATIC;
            }
         }
         description {
            state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 240 240 240 255;
         }
      }
      part {
         name: "button.over.edit";
         type: RECT;
         mouse_events: 1;
         clip_to: "edit.clipper";
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
            rel1.to: "bg.edit";
            rel2.to: "bg.edit";
         }
         description {
            state: "pressed" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }

      part {
         name: "elm.swallow.genlist";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            rel1 {
               to_y: "separator.bg.button";
               relative: 0.0 1.0;
            }
         }
      }
   }

   programs {
      program {
         signal: "toggle,on,edit";
         source: "gui";
         action: STATE_SET "pressed" 0.0;
         target: "button.edit";
         target: "button.over.edit";
         target: "ico.edit";
         after: "show_edit_buttons";
      }
      program {
         name: "show_edit_buttons";
         action: STATE_SET "alternate" 0.0;
         transition: ACCELERATE 0.3;
         target: "button.clipper";
         target: "edit-button.clipper";
      }

      program {
         signal: "toggle,off,edit";
         source: "gui";
         action: STATE_SET "default" 0.0;
         target: "button.edit";
         target: "button.over.edit";
         target: "ico.edit";
         after: "hide_edit_buttons";
      }
      program {
         name: "hide_edit_buttons";
         action: STATE_SET "default" 0.0;
         transition: ACCELERATE 0.3;
         target: "button.clipper";
         target: "edit-button.clipper";
      }

      program {
         signal: "mouse,clicked,1";
         source: "button.edit";
         action: SIGNAL_EMIT "clicked,edit" "gui";
         api: "edit was clicked";
      }
      program {
         signal: "mouse,clicked,1";
         source: "button.over.edit";
         action: SIGNAL_EMIT "clicked,edit,done" "gui";
         api: "edit_done was clicked";
      }
   }
}
