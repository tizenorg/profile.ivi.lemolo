group {
   name: "elm/layout/dialer/popup";

   images {
      image: "loading_0.png" COMP;
      image: "loading_1.png" COMP;
      image: "loading_2.png" COMP;
      image: "loading_3.png" COMP;
      image: "loading_4.png" COMP;
      image: "loading_5.png" COMP;
      image: "loading_6.png" COMP;
      image: "loading_7.png" COMP;
   }

   parts {
      part {
         name: "bg";
         type: RECT;
         mouse_events: 1; /* do not let events fall through */
         description {
            state: "default" 0.0;
            color: 255 255 255 200;
            color_class: "bg";
         }
         description {
            state: "content" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 230;
         }
      }

#define SEPARATOR(id, clip, rely, offy, relto)                          \
      part {                                                            \
         name: "separator.dark."##id;                                   \
         type: RECT;                                                    \
         mouse_events: 0;                                               \
         clip_to: clip;                                                 \
         description {                                                  \
            state: "default" 0.0;                                       \
            color: 255 255 255 255;                                     \
            color_class: "dark";                                        \
            rel1 {                                                      \
               relative: 0.0 rely;                                      \
               offset: 0 offy;                                          \
               to_y: relto;                                             \
            }                                                           \
            rel2 {                                                      \
               relative: 1.0 rely;                                      \
               offset: -1 (offy + SEPARATOR_HEIGHT / 2);                \
               to_y: relto;                                             \
            }                                                           \
         }                                                              \
      }                                                                 \
      part {                                                            \
         name: "separator.bg."##id;                                     \
         type: RECT;                                                    \
         mouse_events: 0;                                               \
         clip_to: clip;                                                 \
         description {                                                  \
            state: "default" 0.0;                                       \
            color: 255 255 255 255;                                     \
            color_class: "bg";                                          \
            rel1 {                                                      \
               relative: 0.0 rely;                                      \
               offset: 0 (offy + SEPARATOR_HEIGHT / 2);                 \
               to_y: relto;                                             \
            }                                                           \
            rel2 {                                                      \
               relative: 1.0 rely;                                      \
               offset: -1 (offy + SEPARATOR_HEIGHT);                    \
               to_y: relto;                                             \
            }                                                           \
         }                                                              \
      }

      part {
         name: "clipper.title";
         type: RECT;
         description {
            state: "default" 0.0;
            color: 255 255 255 0;
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }

      part {
         name: "elm.text.title";
         type: TEXT;
         mouse_events: 0;
         clip_to: "clipper.title";
         description {
            state: "default" 0.0;
            min: 0 (ACTION_HEIGHT / 2);
            color_class: "action";
            visible: 1;
            rel1 {
               relative: 0.0 0.0;
               offset: 0 (-ACTION_HEIGHT / 2 - SEPARATOR_HEIGHT);
            }
            rel2 {
               relative: 1.0 0.0;
               offset: -1 (-SEPARATOR_HEIGHT - 1);
            }
            text {
               font: FONT_NORMAL;
               size: SIZE_MEDIUM;
               ellipsis: 0.0;
               text: "contents";
            }
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            rel1 {
               relative: 0.0 0.0;
               offset: 0 0;
            }
            rel2 {
               relative: 1.0 0.0;
               offset: -1 (ACTION_HEIGHT / 2 - 1);
            }
         }
      }
      SEPARATOR("title", "clipper.title", 1.0, 0, "elm.text.title");

      programs {
         program {
            signal: "show,title";
            source: "gui";
            action: STATE_SET "visible" 0.0;
            target: "clipper.title";
            target: "elm.text.title";
         }
         program {
            signal: "hide,title";
            source: "gui";
            action: STATE_SET "default" 0.0;
            target: "clipper.title";
            target: "elm.text.title";
         }
      }

      part {
         name: "loading";
         type: IMAGE;
         description {
            state: "default" 0.0;
            min: LOADING_SIZE LOADING_SIZE;
            max: LOADING_SIZE LOADING_SIZE;
            align: 0.5 0.5;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            color_class: "action";
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            image {
               tween: "loading_0.png";
               tween: "loading_1.png";
               tween: "loading_2.png";
               tween: "loading_3.png";
               tween: "loading_4.png";
               tween: "loading_5.png";
               tween: "loading_6.png";
               normal: "loading_7.png";
               scale_hint: STATIC;
            }
            visible: 1;
         }
      }

      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            rel1 {
               to_y: "elm.text.title";
               relative: 0.0 1.0;
            }
            rel2 {
               to_y: "bg.buttons";
               relative: 1.0 0.0;
               offset: -1 0;
            }
         }
      }

      programs {
         program {
            signal: "show,content";
            source: "gui";
            action: STATE_SET "content" 0.0;
            target: "bg";
            after: "stop,loading";
         }
         program {
            signal: "hide,content";
            source: "gui";
            action: STATE_SET "default" 0.0;
            target: "bg";
            after: "start,loading";
         }

         program {
            name: "stop,loading";
            action: ACTION_STOP;
            target: "start,loading";
            after: "hide,loading";
         }
         program {
            name: "hide,loading";
            action: STATE_SET "default" 0.0;
            target: "loading";
         }

         program {
            name: "start,loading";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.6666;
            target: "loading";
            after: "start,loading";
         }

         program {
            signal: "load";
            after: "start,loading";
         }
      }

      /* note: this button 1/2 is ugly but simple */
      part {
         name: "bg.buttons";
         type: RECT;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            color: 255 255 255 255;
            color_class: "bg";
            align: 0.5 1.0;
            fixed: 1 1;
            rel1 {
               relative: 0.0 1.0;
               offset: 0 -1;
            }
         }
         description {
            state: "button1" 0.0;
            inherit: "default" 0.0;
            min: 0 (ACTION_HEIGHT + SEPARATOR_HEIGHT);
         }
         description {
            state: "button2" 0.0;
            inherit: "default" 0.0;
            min: 0 (2 * ACTION_HEIGHT + 2 * SEPARATOR_HEIGHT);
         }
      }

      part {
         name: "elm.swallow.button1";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            rel1 {
               relative: 0.0 1.0;
               offset: 0 -1;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: -1 -1;
            }
         }
         description {
            state: "button1" 0.0;
            inherit: "default" 0.0;
            min: 0 (ACTION_HEIGHT + SEPARATOR_HEIGHT);
            visible: 1;
            rel1 {
               relative: 0.0 1.0;
               offset: 0 (-ACTION_HEIGHT - SEPARATOR_HEIGHT);
            }
         }
         description {
            state: "button2" 0.0;
            inherit: "default" 0.0;
            min: 0 (ACTION_HEIGHT + SEPARATOR_HEIGHT);
            visible: 1;
            rel1 {
               relative: 0.0 1.0;
               offset: 0 (-2 * ACTION_HEIGHT - 2 * SEPARATOR_HEIGHT);
            }
            rel2 {
               relative: 1.0 1.0;
               offset: -1 (-ACTION_HEIGHT - SEPARATOR_HEIGHT - 1);
            }
         }
      }

      part {
         name: "elm.swallow.button2";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            rel1 {
               relative: 0.0 1.0;
               offset: 0 -1;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: -1 -1;
            }
         }
         description {
            state: "button1" 0.0;
            inherit: "default" 0.0;
         }
         description {
            state: "button2" 0.0;
            inherit: "default" 0.0;
            min: 0 (ACTION_HEIGHT + SEPARATOR_HEIGHT);
            visible: 1;
            rel1 {
               relative: 0.0 1.0;
               offset: 0 (-ACTION_HEIGHT - SEPARATOR_HEIGHT);
            }
         }
      }

      programs {
         program {
            signal: "buttons,0";
            source: "gui";
            action: STATE_SET "default" 0.0;
            target: "bg.buttons";
            target: "elm.swallow.button1";
            target: "elm.swallow.button2";
         }
         program {
            signal: "buttons,1";
            source: "gui";
            action: STATE_SET "button1" 0.0;
            target: "bg.buttons";
            target: "elm.swallow.button1";
            target: "elm.swallow.button2";
         }
         program {
            signal: "buttons,2";
            source: "gui";
            action: STATE_SET "button2" 0.0;
            target: "bg.buttons";
            target: "elm.swallow.button1";
            target: "elm.swallow.button2";
         }
      }

#undef SEPARATOR
   }
}

group {
   name: "elm/entry/cursor/dialer";
   parts {
      part {
         name: "cursor";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            color_class: "action";
            min: ITEM_PADDING (SEPARATOR_HEIGHT / 2);
            align: 0.5 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset: 0 -1;
            }
         }
         description {
            state: "faded" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 128;
         }
      }
      programs {
         program {
            name: "focus";
            signal: "elm,action,focus";
            source: "elm";
            action: ACTION_STOP;
            target: "unfocus";
            target: "unfocus2";
            after: "focus2";
         }
         program {
            name: "focus2";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.3;
            target: "cursor";
            after: "focus3";
         }
         program {
            name: "focus3";
            action: STATE_SET "faded" 0.0;
            transition: ACCELERATE 0.3;
            target: "cursor";
            after: "focus2";
         }

         program {
            name: "unfocus";
            signal: "elm,action,unfocus";
            source: "elm";
            action: ACTION_STOP;
            target: "focus";
            target: "focus2";
            target: "focus3";
            after: "unfocus2";
         }
         program {
            name: "unfocus2";
            action: STATE_SET "faded" 0.0;
            transition: ACCELERATE 0.3;
            target: "cursor";
         }
      }
   }
}

group {
   name: "elm/entry/selection/dialer";
   parts {
      part {
         name: "bg";
         type: RECT;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            color_class: "dark";
         }
      }
   }
}

group {
   name: "elm/entry/base-noedit/dialer-popup";

   styles {
      style {
         name: "entry_textblock_style";
         base: "font="FONT_NORMAL" font_size="SIZE_MEDIUM" color="TEXTBLOCK_COLOR_ACTION" wrap=word valign=middle align=center";
         tag:  "b" "+ font_weight=Bold";
         tag: "br" "\n";
      }
      style {
         name: "entry_textblock_disabled_style";
         base: "font="FONT_NORMAL" font_size="SIZE_MEDIUM" color="TEXTBLOCK_COLOR_ACTION" wrap=word valign=middle align=center";
         tag:  "b" "+ font_weight=Bold";
         tag: "br" "\n";
      }
   }

   parts {
      part {
         name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         multiline: 1;
         source: "elm/entry/selection/dialer";
         source4: "elm/entry/cursor/dialer";
         description {
            state: "default" 0.0;
            text {
               style: "entry_textblock_style";
               min: 0 1;
               max: 1 1;
               align: 0.5 0.5;
            }
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_disabled_style";
            }
         }
      }
   }

   programs {
      program {
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program {
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program {
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
   }
}

group {
   name: "elm/entry/base/dialer-popup-editable";

   styles {
      style {
         name: "entry_textblock_editable_style";
         base: "font="FONT_NORMAL" font_size="SIZE_MEDIUM" color="TEXTBLOCK_COLOR_ACTION" wrap=word valign=top align=auto";
         tag:  "b" "+ font_weight=Bold";
         tag: "br" "\n";
      }
      style {
         name: "entry_textblock_editable_disabled_style";
         base: "font="FONT_NORMAL" font_size="SIZE_MEDIUM" color="TEXTBLOCK_COLOR_ACTION" wrap=word valign=top align=auto";
         tag:  "b" "+ font_weight=Bold";
         tag: "br" "\n";
      }
   }

   parts {
      part {
         name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: EXPLICIT;
         source: "elm/entry/selection/dialer";
         source4: "elm/entry/cursor/dialer";
         multiline: 1;
         description {
            state: "default" 0.0;
            align: 0.0 0.0;
            text {
               style: "entry_textblock_editable_style";
               min: 0 1;
               max: 1 1;
               align: -1.0 0.0;
            }
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_editable_disabled_style";
            }
         }
      }
   }

   programs {
      program {
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program {
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program {
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
   }
}
