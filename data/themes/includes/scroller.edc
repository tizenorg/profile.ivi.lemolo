group {
   name: "elm/scroller/base/multiparty-details";
   alias: "elm/genlist/base/history";

   script {
      public sbvis_v, sbalways_v, sbvis_timer;
      public timer0(val) {
         new v;
         v = get_int(sbvis_v);
         if (v) {
            v = get_int(sbalways_v);
            if (!v) {
               emit("do-hide-vbar", "");
               set_int(sbvis_v, 0);
            }
         }
         set_int(sbvis_timer, 0);
         return 0;
      }
   }

   parts {
      part {
         name: "clipper";
         type: RECT;
         mouse_events: 0;
         description {
            state: "default" 0.0;
         }
      }

      part {
         name: "elm.swallow.content";
         clip_to: "clipper";
         type: SWALLOW;
         description {
            state: "default" 0.0;
         }
      }

      part {
         name: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description {
            state: "default" 0.0;
         }
         description {
            state: "hidden" 0.0;
            color: 255 255 255 0;
            visible: 0;
         }
      }

      part {
         name: "sb_vbar_clip";
         clip_to: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description {
            state: "default" 0.0;
         }
         description {
            state: "hidden" 0.0;
            color: 255 255 255 0;
            visible: 0;
         }
      }

      part {
         name: "sb_vbar";
         type: RECT;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: SCROLLBAR_WIDTH SCROLLBAR_HEIGHT;
            align: 1.0 0.0;
            rel1 {
               relative: 1.0 0.0;
               offset: -1 0;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: -1 -1;
            }
         }
      }

      part {
         name: "elm.dragable.vbar";
         type: RECT;
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar";
         }
         description {
            state: "default" 0.0;
            color: 255 255 255 255;
            color_class: "light";
            fixed: 1 1;
            min: SCROLLBAR_WIDTH SCROLLBAR_HEIGHT;
            max: SCROLLBAR_WIDTH 99999;
            rel1 {
               relative: 0.5 0.5;
               offset: 0 0;
               to: "sb_vbar";
            }
            rel2 {
               relative: 0.5 0.5;
               offset: 0 0;
               to: "sb_vbar";
            }
         }
      }
   }

   programs {
      program {
         signal: "load";
         source: "";
         script {
            set_state(PART:"sb_vbar_clip", "hidden", 0.0);
            set_int(sbvis_v, 0);
            set_int(sbalways_v, 0);
            set_int(sbvis_timer, 0);
         }
      }

      program {
         name: "vbar_show";
         signal: "elm,action,show,vbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_vbar_clip_master";
      }

      program {
         name: "vbar_hide";
         signal: "elm,action,hide,vbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_vbar_clip_master";
      }

      program {
         name: "vbar_show_always";
         signal: "elm,action,show_always,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               set_int(sbalways_v, 1);
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
         }
      }

      program {
         name: "vbar_show_notalways";
         signal: "elm,action,show_notalways,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_v);
            if (v) {
               set_int(sbalways_v, 0);
               v = get_int(sbvis_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
         }
      }

      program {
         signal: "do-show-vbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 0.5;
         target: "sb_vbar_clip";
      }

      program {
         signal: "do-hide-vbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 0.5;
         target: "sb_vbar_clip";
      }

      program {
         name: "scroll";
         signal: "elm,action,scroll";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
            v = get_int(sbvis_timer);
            if (v > 0) cancel_timer(v);
            v = timer(1.0, "timer0", 0);
            set_int(sbvis_timer, v);
         }
      }
   }
}
